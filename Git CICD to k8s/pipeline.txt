node {
    stage("Git Clone"){

        git credentialsId: 'GIT_HUB_CREDENTIALS', branch: 'main', url: 'https://github.com/kiendo96/jenkinslab.git'
        
    }
    stage ('Scan using Gradle') {
        withSonarQubeEnv(installationName: 'SonarQube', credentialsId: 'SONARQUBE_TOKEN') {
            sh "./gradlew sonarqube \
              -Dsonar.projectKey=SpringBoot2 \
              -Dsonar.host.url=http://172.16.1.151:9000/ \
              -Dsonar.login=admin \
              -Dsonar.password=123 \
              -Dsonar.projectVersion=0.0.1-SNAPSHOT"
        }
    }
    stage('Gradle Build') {

       sh './gradlew build'

    }
    stage('Harbor Build') {
        sh 'docker build -t jhooq-docker-demo .'
        sh 'docker image list'
        sh 'docker tag jhooq-docker-demo 172.16.1.152/forcode/my-java'
    }
    stage('Harbor Login'){
        sh 'docker login -u kiendo -p Kien@1235 172.16.1.152'
    }
    stage("Push Image to Docker Hub"){
        sh 'docker push 172.16.1.152/forcode/my-java'
    }
    stage("Docker build"){
        sh 'docker version'
        sh 'docker build -t jhooq-docker-demo .'
        sh 'docker image list'
        sh 'docker tag jhooq-docker-demo kindquit/jhooq-docker-demo:jhooq-docker-demo'
    }
    stage("Docker Login"){
        withCredentials([string(credentialsId: 'DOCKER_HUB_PASSWORD', variable: 'PASSWORD')]) {
            sh 'docker login -u kindquit -p $PASSWORD'
        }
    }
    stage("Push Image to Docker Hub"){
        sh 'docker push  kindquit/jhooq-docker-demo:jhooq-docker-demo'
    }
    stage("SSH Into k8s Server") {
        def remote = [:]
        remote.name = 'master'
        remote.host = '172.16.1.100'
        remote.user = 'root'
        remote.password = '123'
        remote.allowAnyHosts = true
        stage('Put k8s-spring-boot-deployment.yml onto k8smaster') {
            sshPut remote: remote, from: 'k8s-spring-boot-deployment.yml', into: '.'
        }
        stage('Deploy spring boot') {
          sshCommand remote: remote, command: "kubectl apply -f k8s-spring-boot-deployment.yml"
        }
    }
}